# COCI Grader

import sys
import os.path
import filecmp
from subprocess import call
from shutil import copyfile

test_data_path = "./testdata/"

if len(sys.argv) != 3:
    print "Invalid arguments. The arguments should be: [task name] [time limit]"
    sys.exit()

task_name = sys.argv[1]
if not os.path.isdir(test_data_path + task_name):
    print "Invalid arguments. The arguments should be: [task name] [time limit]"
    sys.exit()
try:
    time_limit = float(sys.argv[2])
except ValueError:
    print "Invalid arguments. The arguments should be: [task name] [time limit]"
    sys.exit()
        
submission_path = "./"

# Compile:
sys.stdout.write("Compiling... ")
call(["g++", "-std=c++11", submission_path + task_name + ".cpp"])
print "done"

step = 1
input_file_prefix = test_data_path + task_name + "/" + task_name + ".in."
output_file_prefix = test_data_path + task_name + "/" + task_name + ".out."
results = []
while (os.path.isfile(input_file_prefix + str(step))):
    copyfile(input_file_prefix + str(step), submission_path + task_name + ".in")
    found_result = False
    call(["./a.out", "&sleep", "1;", "kill", "$!"])
    if not found_result:
        if filecmp.cmp(task_name + ".out", output_file_prefix + str(step)):
            results.append(["*"])
            found_result = True
        else:
            with open(task_name + ".out", 'r') as content_file1:
                content1 = str(content_file1.read())
            with open(output_file_prefix + str(step), 'r') as content_file2:
                content2 = str(content_file2.read())
            sys.stdout.write(list(content1))
            sys.stdout.write(list(content2))
            print (content1 == content2)
            results.append(['x'])
            found_result = True
    print results[-1]
    step += 1

print results


